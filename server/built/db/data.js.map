{"version":3,"file":"data.js","sourceRoot":"","sources":["../../src/db/data.ts"],"names":[],"mappings":"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","sourcesContent":["import { adjectives, animals, uniqueNamesGenerator } from 'unique-names-generator';\r\n\r\nimport { createError } from '../api';\r\nimport { Acknowledgement, Hesitant, User } from '../ts';\r\nimport DB from './DB';\r\n\r\nfunction handle_error(error: Error, callback: Hesitant<any>) {\r\n    console.error(error);\r\n\r\n    callback(createError('FAILED', error.name + ': ' + error.message));\r\n}\r\n\r\nexport function generateUsername(callback: (res: string) => void) {\r\n    let username = uniqueNamesGenerator({\r\n        dictionaries: [adjectives, animals],\r\n        separator: '',\r\n        style: 'capital',\r\n        length: 2\r\n    });\r\n\r\n    DB.users.find({\r\n        username: username,\r\n    }).then((docs: User[]) => {\r\n        if (docs.length > 0) {\r\n            generateUsername(callback);\r\n        } else {\r\n            callback(username);\r\n        }\r\n    });\r\n};\r\n\r\nexport function registerUser(user_id: string, callback: Acknowledgement<User>) {\r\n    DB.users.find({\r\n        user_id: user_id\r\n    })\r\n        .then(docs => {\r\n            if (docs.length > 0) {\r\n                callback(docs[0]);\r\n            } else {\r\n                generateUsername(username => {\r\n                    DB.users.insert({\r\n                        user_id: user_id,\r\n                        username: username,\r\n                    })\r\n                        .then(callback)\r\n                        .catch(e => handle_error(e, callback));\r\n\r\n                });\r\n            }\r\n        })\r\n        .catch(e => handle_error(e, callback));\r\n\r\n}\r\n\r\nexport function setUsername(user: User, callback: Acknowledgement<User>) {\r\n    if (user.username === '') {\r\n        callback(createError('REJECTED', 'Username cannot be empty!'));\r\n    } else {\r\n        DB.users.find({\r\n            username: user.username\r\n        })\r\n            .then((docs: User[]) => {\r\n                if (docs.length > 0) {\r\n                    callback(createError('REJECTED', \"Username is taken! \" + docs[0].username))\r\n                } else {\r\n                    DB.users.findOneAndUpdate(\r\n                        {user_id: user.user_id},\r\n                        {$set: {username: user.username}}\r\n                    )\r\n                        .then(callback)\r\n                        .catch(e => handle_error(e, callback));\r\n\r\n                }\r\n            })\r\n            .catch(e => handle_error(e, callback));\r\n    }\r\n\r\n}\r\n\r\nexport function getUserByName(username: string, callback: Acknowledgement<User>) {\r\n    DB.users.findOne({\r\n        username: username\r\n    })\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n\r\n}\r\n\r\nexport function getUsersByName(usernames: string[], callback: Acknowledgement<User[]>) {\r\n    if (usernames.length === 0) {\r\n        console.log('getUsersByName called on empty array!');\r\n        callback([]);\r\n    } else {\r\n        DB.users.find({\r\n            $or: usernames.reduce((acc: Partial<User>[], cur: string) => {\r\n                acc.push({\r\n                    username: cur\r\n                });\r\n\r\n                return acc;\r\n            }, [])\r\n        })\r\n            .then(callback)\r\n            .catch(e => handle_error(e, callback));\r\n    }\r\n}"]}

