{"version":3,"file":"anagram.js","sourceRoot":"","sources":["../../src/db/anagram.ts"],"names":[],"mappings":";;AACA,6BAAsB;AACtB,gCAAmD;AAEnD,SAAS,YAAY,CAAC,KAAY,EAAE,QAAuB;IACvD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAErB,QAAQ,CAAC,iBAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,SAAgB,iBAAiB,CAAC,WAAmC,EAAE,QAAwC;IAC3G,YAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;SAC1B,IAAI,CAAC,QAAQ,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAJD,8CAIC;AAED,SAAgB,iBAAiB,CAAC,aAAmB,EAAE,OAAe,EAAE,aAA2B,EAAE,QAAwC;IACzI,YAAE,CAAC,QAAQ,CAAC,gBAAgB,CACxB,EAAE,GAAG,EAAE,OAAO,EAAE,EAChB,EAAE,IAAI,EAAE,EAAC,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,EAAE,aAAa,EAAC,EAAE,CACjE;SACI,IAAI,CAAC,QAAQ,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAPD,8CAOC;AAED,SAAgB,uBAAuB,CAAC,IAAU,EAAE,OAAe,EAAE,QAA+B;IAChG,YAAE,CAAC,QAAQ,CAAC,gBAAgB,CACxB,EAAE,GAAG,EAAE,OAAO,EAAE,EAChB,EAAE,IAAI,EAAE,EAAC,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,EAAE,IAAI,EAAE,EAAC,CAC3D;SACI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAND,0DAMC;AAED,SAAgB,mBAAmB,CAAC,IAAU,EAAE,QAA0C;IACtF,YAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;QACb,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;KAChD,CAAC;SACG,IAAI,CAAC,QAAQ,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAND,kDAMC;AAED,SAAgB,eAAe,CAAC,EAAU,EAAE,IAAU,EAAE,QAAwC;IAC5F,YAAE,CAAC,QAAQ,CAAC,gBAAgB,CACxB,EAAE,GAAG,EAAE,EAAE,EAAE,EACX,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,kBAAY,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CACjF;SACI,IAAI,CAAC,QAAQ,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAPD,0CAOC;AAED,SAAgB,cAAc,CAAC,EAAU,EAAE,QAAwC;IAC/E,YAAE,CAAC,QAAQ,CAAC,OAAO,CACf,EAAE,GAAG,EAAE,EAAE,EAAE,CACd;SACI,IAAI,CAAC,QAAQ,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/C,CAAC;AAND,wCAMC","sourcesContent":["import { Acknowledgement, AnagramObject, AnagramState, Hesitant, User } from '../ts';\r\nimport DB from './DB';\r\nimport { createError, defaultState } from '../api';\r\n\r\nfunction handle_error(error: Error, callback: Hesitant<any>) {\r\n    console.error(error);\r\n\r\n    callback(createError('FAILED', error.name + ': ' + error.message));\r\n}\r\n\r\nexport function createAnagramGame(game_object: Partial<AnagramObject>, callback: Acknowledgement<AnagramObject>) {\r\n    DB.anagrams.insert(game_object)\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n}\r\n\r\nexport function updateAnagramGame(updating_user: User, game_id: string, updated_state: AnagramState, callback: Acknowledgement<AnagramObject>) {\r\n    DB.anagrams.findOneAndUpdate(\r\n        { _id: game_id },\r\n        { $set: {['states.' + updating_user.user_id]: updated_state} }\r\n    )\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n}\r\n\r\nexport function markAnagramGameAsViewed(user: User, game_id: string, callback: Acknowledgement<void>) {\r\n    DB.anagrams.findOneAndUpdate(\r\n        { _id: game_id },\r\n        { $set: {['states.' + user.user_id + '.viewed']: true }}\r\n    )\r\n        .catch(e => handle_error(e, callback));\r\n}\r\n\r\nexport function getUserAnagramGames(user: User, callback: Acknowledgement<AnagramObject[]>) {\r\n    DB.anagrams.find({\r\n        ['states.' + user.user_id]: { $exists: true }\r\n    })\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n}\r\n\r\nexport function joinAnagramGame(id: string, user: User, callback: Acknowledgement<AnagramObject>) {\r\n    DB.anagrams.findOneAndUpdate(\r\n        { _id: id },\r\n        { $set: { ['states.' + user.user_id]: defaultState }, $push: { users: user } },\r\n    )\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n}\r\n\r\nexport function getAnagramGame(id: string, callback: Acknowledgement<AnagramObject>) {\r\n    DB.anagrams.findOne(\r\n        { _id: id }\r\n    )\r\n        .then(callback)\r\n        .catch(e => handle_error(e, callback));\r\n}"]}